@page "/doctors/{DoctorId:guid}"
@using ClientsWebApp.Blazor.Pages.Services
@inherits CancellableComponent

@inject NavigationManager NavigationManager
@inject IDoctorService DoctorService;
@inject IServiceService ServiceService;

@if (doctor != null)
{
    <DoctorCard Doctor="doctor" />
    <AuthorizeView Roles="Patient">
        <Authorized>
            <input type="button" class="btn btn-info" value="Make an appointment with the doctor"
               @onclick="ToCreateAppointmentPage" />
        </Authorized>
    </AuthorizeView>
    @if (Services != null)
    {
        <div class="container p-5 text-center">
            <h2>Provided Services</h2>
            @if (Services.Count() == 0)
            {
                <h1>Services was not found (((( </h1>
            }
            else
            {

                @foreach (var Service in Services)
                {
                    <ServiceCard Service="Service" />
                }

            }
        </div>
    }
    else
    {
        <Loading />
    }
}

@code
{
    [Parameter] public Guid DoctorId { get; set; }
    private Doctor doctor;
    private IEnumerable<Service>? Services { get; set; }
    protected async override Task OnInitializedAsync()
    {
        doctor = await DoctorService.GetByIdAsync(DoctorId, _cts.Token);
        Services = await ServiceService.GetBySpecializationAsync(doctor.Specialization, _cts.Token);
        this.StateHasChanged();
    }
    private void ToCreateAppointmentPage()
    {
        NavigationManager.NavigateTo($"/appointments/create?DoctorId={doctor.Id}");
    }
}