@inject NavigationManager NavigationManager
@inherits CancellableComponent


<MudPaper Square Elevation=3 Class="row p-5 mb-3">
    @if (Patient != null)
    {
        if (Patient.Info.Photo != null)
        {
            <div class="col">
                @if (_image != null)
                {
                    <ImageFromByteArray Image="_image.Content" ImageType="_image.ContentType" IsSvgImage="false" height="200" />
                }
                else
                {
                    <Loading />
                }
            </div>
        }
        <div class="col-sm m-lg-3">
            <MudText Typo="Typo.h6">@_localizer.GetString(LocalizationType.FullName): @Patient.Info.GetFullName()</MudText>
            <MudText Typo="Typo.h6">@_localizer.GetString(LocalizationType.PhoneNumber): @Patient.PhoneNumber</MudText>
            <MudButton Color="Color.Success" Variant=Variant.Filled Class="w-100" OnClick="NavigateToMedicalCardPage">
                <MudIcon Icon="@Icons.Material.Filled.Edit" />
                <span class="ml-2">
                    Медицинская карта
                </span>
            </MudButton>
            @ChildContent
        </div>
    }
</MudPaper>


@code {
    [Parameter] public PatientDTO Patient { get; set; }
    [Parameter] public RenderFragment ChildContent { get; set; }
    private Image? _image;
    protected async override Task OnInitializedAsync()
    {
        _image = Patient.Info.Photo != null? await Patient.Info.Photo : null;
    }

    private void NavigateToMedicalCardPage()
    {
        NavigationManager.NavigateTo($"/patients/{Patient.Id}/card");
    }
}