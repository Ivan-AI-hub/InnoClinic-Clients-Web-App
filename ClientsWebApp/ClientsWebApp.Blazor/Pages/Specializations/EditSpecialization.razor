@page "/specializations/{SpecializationId:guid}/edit"
@attribute [Authorize(Roles = "Admin")]
@inherits CancellableComponent

<div>
    <p class="text-danger"> @ErrorMessage</p>
</div>
@if (Data != null)
{
    <EditForm Model="@Data" OnValidSubmit="EditAsync" class="form">
        <FluentValidationValidator DisableAssemblyScanning=true />
        <ValidationSummary />
        <div class="row">
            <div class="col p-2">
                <FormInputText Label="Cpecialization name" Id="firstName" @bind-Value="@Data.Name" />
                <FormInputCheckBox Label="Active" Id="lastName" @bind-Value="@Data.IsActive" />
            </div>
            <div class="col p-2">


                <h2>
                    Services                 
                    @if (!IsManagerCreating)
                    {
                        <MudButton Color=Color.Primary Variant=Variant.Filled OnClick="@StartCreateService">
                            Create a new service
                        </MudButton>
                    }
                    else
                    {
                        <MudButton Color=Color.Error Variant=Variant.Filled OnClick="@StopCreateService">
                            Exit
                        </MudButton>
                    }
                </h2>

                @if (IsManagerCreating)
                {
                    <CreateService SpecializationId="default" OnModelCreated="@ServiceCreated" />
                }

                @foreach (var service in Services)
                {
                    <ServiceCard Service="@service" HideSpecialization/>
                }
                @foreach (var service in AddedServices)
                {
                    <div class="row">
                        <div class="col">
                            <CreateServiceModelCard Service="@service" />
                        </div>
                        <div class="col-1 d-flex justify-content-center mb-3 ml-2">
                            <MudIconButton Color="Color.Error" Variant=Variant.Filled Icon="@Icons.Material.Filled.Delete" OnClick="@(()=>RemoveService(service))" />
                        </div>
                    </div>
                }
            </div>
        </div>
        <InnoRow>
            <Left>
                <FormSubmitButton @ref="@SubmitButton" ButtonValue="Save Changes" />
            </Left>
            <Right>
                <DobleQuestionButton OnSuccessAnswerClicked="@Cancel" PreviewButtonValue="Cancel"
                                     QuestionLabel="Do you really want to cancel? Changes will not be saved." />
            </Right>
        </InnoRow>
    </EditForm>
}