@using ClientsWebApp.Domain.Exceptions
@inherits CancellableComponent

@inject IResultManager ResultManager;
@inject NavigationManager NavigationManager;

@if (IsNotFound)
{
    <AuthorizeView Roles="Patient">
        <Authorized Context="editDate">
            <p>That appointment have not resul yet:(</p>
        </Authorized>
    </AuthorizeView>
    <AuthorizeView Roles="Doctor">
        <Authorized>
            <MudButton Color="Color.Success" class="w-100" OnClick="@NavigateToCreateResultPage">
                @_localizer.GetString(LocalizationType.CreateResultButtonValue)
            </MudButton>
        </Authorized>
    </AuthorizeView>
}
else
{
    @if (result == null)
    {
        <Loading />
    }
    else
    {
        <div>
            <p>@_localizer.GetString(LocalizationType.Complaints) @result.Complaints</p>
            <p>@_localizer.GetString(LocalizationType.Conclusions) @result.Conclusion</p>
            <p>@_localizer.GetString(LocalizationType.Recomendations) @result.Recomendations</p>
            @if (!HideEditButton)
            {
                <AuthorizeView Roles="Doctor">
                    <Authorized>
                        <MudButton Color="Color.Info" class="w-100" OnClick="@NavigateToEditPage">
                            @_localizer.GetString(LocalizationType.EditButtonValue)
                        </MudButton>
                    </Authorized>
                </AuthorizeView>
            }
        </div>
    }
}
